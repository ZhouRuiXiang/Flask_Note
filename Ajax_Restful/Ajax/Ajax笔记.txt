# AJAX
AJAX
A: Asynchronize 异步
J: Javascript js语言
A: And
X: XML		指定传输的数据格式（当时普遍使用XML）
XML因为有特殊的格式，浪费传输流量，可以使用更加简洁的JSON做为传输数据格式
AJAX:
使用 JavaScript 向服务器提出请求并处理响应而不阻塞用户核心对象XMLHttpRequest。通过这个对象，您的 JavaScript 可在不重载页面的情况与 Web 服务器交换数据，即在不需要刷新页面的情况下，就可以产生局部刷新的效果


AJAX实现登录

# app.py

# 方法名称要大写
@app.route('/login/', methods=['GET', 'POST'])
def login():
    if request.method == 'GET':
        return render_template('login.html')
    else:
        # 与前端约定，发送网络请求，不管验证是否成功（账号密码是否正确），都返回同样格式的JSON对象
        # {'code': 200, 'message': ''}
        username = request.form.get('username')
        password = request.form.get('password')
        if username == 'xingchen' and password == '111':
            # return '登录成功'
            return jsonify({'code': 200, 'message': ''})
        else:
            # return '登录失败'
            return jsonify({'code': 401, 'message': '用户名或密码错误！'})


# login.html
	  {#注意这里导入jquery #}
    <script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js">

    </script>

    <script>
        {#整个页面渲染完毕后才会执行$里的代码#}
        $(function () {
            $("#submit-btn").click(function (event) {
                // 阻止默认行为 这里是关闭了默认提交表单的行为
                event.preventDefault();
                var usernameInput =  $('input[name="username"]');
                var username = usernameInput.val();
                var passwordInput = $('input[name="password"]');
                {#这里一定要记得加.val()输入的值，否则堆栈溢出#}
                var password = passwordInput.val();
                $.post({
                    'url': '/login/',
                    'data': {
                        'username': username,
                        'password': password
                    },
                    'success': function (data) {
                        if(data['code'] == 200){
                            window.location = '/'
                        }else{
                            {#alert(data['message']);#}
                            var message = data['message'];
                            $('#message-p').html(message);
                            $('#message-p').show();

                        }
                    },
                    'fail': function (error) {
                        console.log(error);
                    }
                })
            });
        })
    </script>